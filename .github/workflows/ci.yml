name: JS CI

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
    - uses: actions/checkout@v3

    - uses: extractions/setup-just@v1

    - uses: actions/setup-node@v3.8.1
      with:
        node-version: lts/*
        check-latest: true

    - uses: denoland/setup-deno@v1.1.2

    - uses: oven-sh/setup-bun@v1
      if: ${{ matrix.os != 'windows-latest' }}
      with:
        bun-version: latest

    - name: Test
      run: npm run test

  docs:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - uses: extractions/setup-just@v1

    - uses: actions/setup-node@v3.8.1
      with:
        node-version: lts/*
        check-latest: true

    - uses: denoland/setup-deno@v1.1.2

    - uses: oven-sh/setup-bun@v1
      if: ${{ matrix.os != 'windows-latest' }}
      with:
        bun-version: latest

    - name: Docs
      shell: bash
      run: |
        just prepare
        just docs
    - name: Packaging...
      run: tar czf kubectl-karmada-${{ matrix.goos }}-${{ matrix.goarch }}.tgz kubectl-karmada LICENSE
    - name: Uploading assets...
      if: ${{ !env.ACT }}
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./kubectl-karmada-${{ matrix.goos }}-${{ matrix.goarch }}.tgz
        asset_name: kubectl-karmada-${{ matrix.goos }}-${{ matrix.goarch }}.tgz
        asset_content_type: application/gzip
